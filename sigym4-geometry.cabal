-- Initial sigym4-geometry.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                sigym4-geometry
version:             0.3.4
synopsis:            Geometry types for GIS applications.
description:         Geometry types for GIS applications, algorithms and
                     de/serialization from/into well-known formats.
                     Includes WKB and Geojson de/serializers.
homepage:            https://github.com/meteogrid/sigym4-geometry
license:             BSD3
license-file:        LICENSE
author:              Alberto Valverde
maintainer:          alberto@meteogrid.com
copyright:           2014-2015 Meteogrid
category:            Data
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

source-repository head
  type:              git
  location:          https://github.com/meteogrid/sigym4-geometry

flag herbie
  description: Enable `herbie`.
  default: False
  manual: True

flag debug
  description: Enable Debug mode
  default: False
  manual: True

flag asserts
  description: Enable Assertions
  default: False
  manual: True


library
  exposed-modules:    Sigym4.Geometry
                    , Sigym4.Geometry.Types
                    , Sigym4.Geometry.Algorithms
                    , Sigym4.Geometry.Binary
                    , Sigym4.Geometry.Json
                    , Sigym4.Geometry.Arrow
                    , Sigym4.Geometry.Rasterize
                    , Sigym4.Geometry.QuadTree
  build-depends:       base     >= 4.6 && <5
                     , linear   >= 1.20.2
                     , lens
                     , hashable
                     , mtl
                     , vector
                     , vector-th-unbox
                     , data-binary-ieee754
                     , bytestring
                     , text
                     , binary
                     , aeson
                     , semigroups
                     , transformers
                     , deepseq
  default-language:    Haskell2010
  ghc-options:         -Wall
                       -fwarn-incomplete-patterns
                       -fwarn-incomplete-uni-patterns
                       -funbox-strict-fields

  if flag(herbie)
    build-depends: HerbiePlugin >= 0.1 && < 0.2
    ghc-options: -fplugin=Herbie
    cpp-options: -DHERBIE

  if flag(debug)
    cpp-options: -DDEBUG

  if flag(asserts)
    cpp-options: -DASSERTS

test-suite main
  type:              exitcode-stdio-1.0
  build-depends:     base
                   , binary
                   , linear
                   , semigroups
                   , vector-th-unbox
                   , vector
                   , mtl
                   , lens
                   , hashable
                   , hspec >= 1.10.0
                   , bytestring
                   , sigym4-geometry
                   , data-binary-ieee754
                   , QuickCheck
                   , aeson
                   , text
                   , transformers
  hs-source-dirs:    tests
  main-is:           Spec.hs
  default-language:  Haskell2010
  ghc-options:       -Wall -rtsopts -with-rtsopts=-K1K
  cpp-options:     -DASSERTS

benchmark bench
  type:              exitcode-stdio-1.0
  hs-source-dirs:    tests bench
  main-is:           Main.hs
  build-depends:     base
                   , deepseq
                   , mtl
                   , semigroups
                   , lens
                   , hashable
                   , transformers
                   , criterion
                   , linear
                   , vector-th-unbox
                   , vector
                   , sigym4-geometry
                   , binary
                   , bytestring
                   , data-binary-ieee754
  default-language:  Haskell2010
  ghc-options:       -Wall
                     -fwarn-incomplete-patterns
                     -fwarn-incomplete-uni-patterns
                     -O2
